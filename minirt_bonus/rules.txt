# ==========================================================
#   MINIRT SCENE CONFIGURATION RULES
# ==========================================================

# ────────────────
#  GENERAL RULES
# ────────────────
- Each non-empty line describes exactly ONE element of the scene.
- The first token in the line is the type identifier (one or two letters).
- Element lines can appear in ANY order.
- Blank lines may appear between elements.
- Parameters are separated by one or more spaces or tabs.
- No newlines are allowed inside an element line.
- Numeric and vector values must be within valid ranges.
- Orientation/normal vectors will be normalized at parse time.
- Uppercase types (A, C, L):
    • A (ambient) → must appear exactly once.
    • C (camera) → must appear exactly once.
    • l (light)  → must appear at least once.
- Lowercase types (sp, pl, cy, cn) can appear zero or more times.

# ────────────────
#  TEXTURE / PATTERN DECLARATION
# ────────────────
t <texture_name> <texture_type> <texture_relative_path>
    # Declares a texture. The name is referenced by objects or ambient.
    # <texture_type> could be "image" or "bump".

c <pattern_name> <R,G,B> <R,G,B> [<number>]
    # Declares a checkerboard pattern.

# ────────────────
#  AMBIENT LIGHT
# ────────────────
A <ambient_ratio> <R,G,B> [<texture_name>]
    # <ambient_ratio> ∈ [0.0, 1.0]
    # Optional <texture_name> replaces background color.

# ────────────────
#  CAMERA
# ────────────────
C <x,y,z> <orient_x,orient_y,orient_z> <FOV>
    # <FOV> ∈ [0, 180]

# ────────────────
#  LIGHT
# ────────────────
l <x,y,z> <brightness> <R,G,B>
    # <brightness> ∈ [0.0, 1.0]

# ────────────────
#  OBJECTS
# ────────────────
#  RULES:
#   - All objects MUST provide <R,G,B>
#   - Optionally, they can provide:
#       • a texture name (declared with `t`)
#       • a bumpmap name (declared with `t` and type="bump")
#       • both (texture and bumpmap)
#       • or neither (plain RGB only)
#   - If a given name is not declared, the program must exit with error.
#   - If both color and texture are given, texture overrides the RGB color.

# ─ Sphere
sp <x,y,z> <north_x,north_y,north_z> <seam_x,seam_y,seam_z> \
   <diameter> <R,G,B> <reflectiveness> <shininess> [<texture_name> [<bumpmap_name>]]

# ─ Plane
pl <x,y,z> <face_x,face_y,face_z> \
   <R,G,B> <reflectiveness> <shininess> [<texture_name> [<bumpmap_name>] [<tiles_per_axis>]]

# ─ Cylinder
cy <x,y,z> <axis_x,axis_y,axis_z> \
   <diameter> <height> <R,G,B> <reflectiveness> <shininess> [<texture_name> [<bumpmap_name>]]

# ─ Cone
cn <x,y,z> <axis_x,axis_y,axis_z> \
   <angle> <height> <R,G,B> <reflectiveness> <shininess> [<texture_name> [<bumpmap_name>]]

# ==========================================================
#  VALIDATION RULES
# ==========================================================
- All referenced <texture_name> or <pattern_name> must be declared.
- If a referenced name is undeclared → terminate with error.
- Orientation and normal vectors are normalized after parsing.
- If both RGB and texture are given → use texture (color is ignored).
- Bumpmaps never affect color — they only modify the shading normal.
